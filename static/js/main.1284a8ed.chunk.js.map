{"version":3,"sources":["redux/reducers/records.js","redux/reducers/index.js","redux/store.js","redux/action-creator/index.js","commonComponents/TimeTypography.js","progress/CircularProgressWithLabel.js","progress/BorderLinearProgress.js","constants/progressType.js","components/Clock.js","libs/utils.js","components/ClockRecord.js","App.js","index.js"],"names":["records","state","action","type","payload","startTime","pauseTime","reducers","combineReducers","store","createStore","applyMiddleware","thunk","logger","dispatch","resetTime","completedTime","TimeTypography","value","Typography","variant","component","color","style","fontWeight","CircularProgressWithLabel","props","Box","sx","position","display","CircularProgress","theme","palette","grey","mode","size","thickness","left","circularProgressClasses","circle","strokeLinecap","top","bottom","right","alignItems","justifyContent","timetext","BorderLinearProgress","styled","LinearProgress","height","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","bar","progressTypeConstant","useStyles","makeStyles","root","textAlign","buttonGroup","margin","progressBar","marginTop","linearProgress","flexDirection","paddingTop","initialTimerState","minutes","seconds","progress","Clock","nodeRef","useRef","useState","alertOpen","setAlertOpen","timeLeft","setTimeLeft","isStart","text","toggleGroup","setToggleGroup","progressType","setProgressType","classes","timeText","formatSeconds","getTimeText","useSelector","useDispatch","bindActionCreators","actionCreators","useEffect","timer","setInterval","prev","percentage","clearInterval","className","ref","Collapse","in","Alert","IconButton","onClick","fontSize","Button","disabled","ClockRecord","console","log","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1284a8ed.chunk.js","sourcesContent":["const records = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"START\": {\r\n      const { payload } = action;\r\n      return [\r\n        ...state,\r\n        {\r\n          startTime: payload.startTime,\r\n        },\r\n      ];\r\n    }\r\n\r\n    case \"PAUSE\": {\r\n      const { payload } = action;\r\n      return [\r\n        ...state,\r\n        {\r\n          pauseTime: payload.pauseTime,\r\n        },\r\n      ];\r\n    }\r\n    case \"RESET\":\r\n    case \"DONE\": {\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default records;\r\n// start_timeText\r\n// duration\r\n// pause_count\r\n","import { combineReducers } from \"redux\";\r\nimport records from \"./records\";\r\n\r\nconst reducers = combineReducers({\r\n  records,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk, logger));\r\n","export const startTime = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"START\",\r\n      payload,\r\n    });\r\n  };\r\n};\r\n\r\nexport const pauseTime = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"PAUSE\",\r\n      payload,\r\n    });\r\n  };\r\n};\r\n\r\nexport const resetTime = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"RESET\",\r\n      payload,\r\n    });\r\n  };\r\n};\r\n\r\nexport const completedTime = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"DONE\",\r\n      payload,\r\n    });\r\n  };\r\n};\r\n","import { Typography } from \"@mui/material\";\r\n\r\nconst TimeTypography = ({ value }) => {\r\n  return (\r\n    <Typography\r\n      variant=\"h5\"\r\n      component=\"h5\"\r\n      color=\"secondary\"\r\n      style={{ fontWeight: 700 }}\r\n    >\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default TimeTypography;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress, {\r\n  circularProgressClasses,\r\n} from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TimeTypography from \"../commonComponents/TimeTypography\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ position: \"relative\" }} display=\"inline-flex\">\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        sx={{\r\n          color: (theme) =>\r\n            theme.palette.grey[theme.palette.mode === \"light\" ? 200 : 800],\r\n        }}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        sx={{\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"#1a90ff\" : \"#308fe8\",\r\n          position: \"absolute\",\r\n          left: 0,\r\n          [`& .${circularProgressClasses.circle}`]: {\r\n            strokeLinecap: \"round\",\r\n          },\r\n        }}\r\n        {...props}\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <TimeTypography value={props.timetext} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CircularProgressWithLabel;\r\n","import LinearProgress, {\r\n  linearProgressClasses,\r\n} from \"@mui/material/LinearProgress\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.mode === \"light\" ? 200 : 800],\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#1a90ff\" : \"#308fe8\",\r\n  },\r\n}));\r\n\r\nexport default BorderLinearProgress;\r\n","export const progressTypeConstant = {\r\n  linear: 0,\r\n  circle: 1,\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CircularProgressWithLabel from \"../progress/CircularProgressWithLabel\";\r\nimport BorderLinearProgress from \"../progress/BorderLinearProgress\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport { progressTypeConstant } from \"../constants/progressType\";\r\nimport TimeTypography from \"../commonComponents/TimeTypography\";\r\nimport { getTimeText } from \"../libs/utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  buttonGroup: {\r\n    \"& > button\": {\r\n      margin: 5,\r\n    },\r\n  },\r\n  progressBar: {\r\n    \"&\": {\r\n      marginTop: 5,\r\n      height: 100,\r\n    },\r\n  },\r\n  circle: {\r\n    strokeLinecap: \"round\",\r\n  },\r\n  linearProgress: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    paddingTop: 25,\r\n  },\r\n}));\r\n\r\nconst initialTimerState = {\r\n  minutes: 25,\r\n  seconds: 0,\r\n  progress: 0,\r\n};\r\nconst totalSeconds = 25 * 60;\r\nconst Clock = () => {\r\n  const nodeRef = useRef(null);\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState({\r\n    minutes: 25,\r\n    seconds: 0,\r\n    progress: 0,\r\n  });\r\n  const [toggleGroup, setToggleGroup] = useState({\r\n    isStart: false,\r\n    text: \"Start\",\r\n  });\r\n  const [progressType, setProgressType] = useState(\r\n    progressTypeConstant[\"circle\"]\r\n  );\r\n  const classes = useStyles();\r\n  const timeText = getTimeText(timeLeft);\r\n  const state = useSelector((state) => state.records);\r\n  const dispatch = useDispatch();\r\n  const { startTime, pauseTime } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  useEffect(() => {\r\n    if (toggleGroup.isStart) {\r\n      const timer = setInterval(() => {\r\n        if (timeLeft.minutes === 0 && timeLeft.seconds === 0) {\r\n          setToggleGroup((prev) => ({\r\n            ...prev,\r\n            isStart: false,\r\n            text: \"Start\",\r\n          }));\r\n          setTimeLeft(initialTimerState);\r\n          setAlertOpen(true);\r\n        } else {\r\n          const currentSeconds = timeLeft.minutes * 60 + timeLeft.seconds;\r\n          const secondsToGo = totalSeconds - currentSeconds - 1;\r\n          const percentage = (secondsToGo / totalSeconds) * 100;\r\n          setTimeLeft((prev) => ({\r\n            seconds: prev.seconds ? prev.seconds - 1 : 59,\r\n            minutes: prev.seconds ? prev.minutes : prev.minutes - 1,\r\n            progress: percentage,\r\n          }));\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [timeLeft, toggleGroup.isStart]);\r\n\r\n  const handleToggle = () => {\r\n    setToggleGroup((prev) => ({\r\n      isStart: !prev.isStart,\r\n      text: prev.isStart ? \"Start\" : \"Stop\",\r\n    }));\r\n    toggleGroup.isStart\r\n      ? pauseTime({ pauseTime: timeText })\r\n      : startTime({ startTime: timeText });\r\n  };\r\n  const handleReset = () => setTimeLeft(initialTimerState);\r\n\r\n  const handleProgressType = () => setProgressType((prev) => !prev);\r\n  return (\r\n    <div className={classes.root} ref={nodeRef}>\r\n      <Collapse in={alertOpen}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setAlertOpen(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          Close me!\r\n        </Alert>\r\n      </Collapse>\r\n      <div className={classes.progressBar}>\r\n        {progressType ? (\r\n          <div className={classes.linearProgress}>\r\n            <TimeTypography value={timeText} />\r\n            <BorderLinearProgress\r\n              variant=\"determinate\"\r\n              value={timeLeft.progress}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <CircularProgressWithLabel\r\n            size={100}\r\n            value={timeLeft.progress}\r\n            timetext={timeText}\r\n            classes={{\r\n              circle: classes.circle,\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.buttonGroup}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleToggle}>\r\n          {toggleGroup.text}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleReset}\r\n          disabled={toggleGroup.isStart}\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleProgressType}\r\n        >\r\n          Progress\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","export const getTimeText = ({ minutes, seconds }) => {\r\n  let formatMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  let formatSeconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n  return `${formatMinutes} : ${formatSeconds}`;\r\n};\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst ClockRecord = () => {\r\n  const state = useSelector((state) => state.records);\r\n  console.log(\"state!!!\", state);\r\n  return <div>records</div>;\r\n};\r\n\r\nexport default ClockRecord;\r\n","import Clock from \"./components/Clock\";\r\nimport ClockRecord from \"./components/ClockRecord\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Clock />\r\n      <ClockRecord />\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/index\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}